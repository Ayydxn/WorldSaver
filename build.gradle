plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}-mc${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = "isXander's Maven"
		url = "https://maven.isxander.dev/releases"
	}

	mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// YetAnotherConfigLib. This is used for World Saver's configuration screen.
	modImplementation include("dev.isxander:yet-another-config-lib:${project.yacl_version}-fabric")

	// Google Drive API
	implementation include("com.google.api-client:google-api-client:${project.google_api_client_version}")
	implementation include("com.google.oauth-client:google-oauth-client-jetty:${project.google_oauth_client_version}")
	implementation include("com.google.apis:google-api-services-drive:${project.google_drive_api_services_version}")
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "fabric_api_version", project.fabric_api_version
	inputs.property "fabric_loader_version", project.fabric_loader_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
		       "minecraft_version": project.minecraft_version,
		       "fabric_api_version": project.fabric_api_version,
		       "fabric_loader_version": project.fabric_loader_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}